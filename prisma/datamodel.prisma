type User {
    id: ID! @id
    username: String! @unique
    email: String! @unique
    image_url: String!
    phone: String! @unique
    first_name: String!
    last_name: String!
    room_no: String! @unique
    roomBookings: [Booking] @relation(name: "UserBookings", onDelete: CASCADE)
    sessions: [UserSessions] @relation(name: "UserLoginSessions", onDelete: CASCADE)
    eventsOrganised: [Event] @relation(name: "UserEvents", onDelete: CASCADE)
    eventsSubscribed: [Event] @relation(name: "EventSubscribers")
}

type UserSessions {
    id: ID! @id
    user: User! @relation(name: "UserLoginSessions")
    createdAt: DateTime! @createdAt
}

type Washer {
    id: ID! @id
    in_use: Boolean!
    updatedAt: DateTime! @updatedAt
}

type Room {
    id: ID! @id
    number: String! @unique
    name: String!
    bookings: [Booking] @relation(name: "RoomBookings", onDelete: CASCADE)
}

type Booking {
    id: ID! @id
    user: User! @relation(name: "UserBookings")
    room: Room! @relation(name: "RoomBookings")
    start: DateTime!
    end: DateTime!
    remark: String
    createdAt: DateTime! @createdAt
}

type Event {
    id: ID! @id
    organiser: User! @relation(name: "UserEvents")
    title: String!
    start: DateTime!
    end: DateTime!
    venue: String!
    image_url: String!
    description: String
    subscribers: [User] @relation(name: "EventSubscribers")
}