# import User from "./prisma.graphql"
# import Admin from "./prisma.graphql"
# import Washer from "./prisma.graphql"
# import WasherWhereInput from "./prisma.graphql"
# import Booking from "./prisma.graphql"
# import Room from "./prisma.graphql"
# import BookingWhereInput from "./prisma.graphql"
# import DateTimeInput from "./prisma.graphql"
# import Event from "./prisma.graphql"
# import EventWhereInput from "./prisma.graphql"
# import Comment from "./prisma.graphql"

input UserRegisterInput {
  username: String
  phone: String!
  room_no: String!
}

type Query {
  user(username: String!): User
  me: User
  washers(data: WasherWhereInput): [Washer]
  bookings(data: BookingWhereInput, start_limit: String): [Booking]
  rooms(data: RoomWhereInput): [Room]
  events(data: EventWhereInput, start_limit: String): [Event]
}

type Mutation {
  login: LoginResponse
  register(user: UserRegisterInput!): User
  updateWasher(id: ID!, in_use: Boolean!): Washer
  createBooking(
    room_number: String!
    start: String!
    end: String!
    remark: String
  ): Booking
  updateBooking(
    id: ID!
    room_number: String!
    start: String!
    end: String!
    remark: String
  ): Booking
  deleteBooking(id: ID!): Booking
  createEvent(
    title: String!
    start: String!
    end: String!
    venue: String!
    image_base64: String!
    description: String
  ): Event
  deleteEvent(id: ID!): Event
  addEventSubscriber(id: ID!): Event
  removeEventSubscriber(id: ID!): Event
  createComment(eventId: ID, content: String!): Comment
  deleteComment(id: ID!): Comment
}

type LoginResponse {
  token: String
  login_status: Boolean!
  register: Boolean
}
